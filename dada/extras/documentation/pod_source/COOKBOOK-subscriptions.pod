=pod

=head1 Subscription Cookbook

=head1 How to Subscribe an Email Address to a Mailing List

A challenge people face is trying to tie Dada Mail's subscription system with another system, like a checkout part of a shopping cart, boards/forum, blog or CMS software.

Dada Mail has hooks into its subscribe system, that you can use by making a small perl script, that can be called from your main program. (If you app is written in Perl, an outside program may not be something you'll need to make) 

=head2 Command Line Utility - subscribe_email.pl

Find a copy of C<subscribe_email.pl> in the Dada Mail distro at: 

C<dada/extras/scripts/subscribe/subscribe_email.pl> 

=head3 Arguments

Run C<subscribe_email.pl> as a shell script, like this: 

 prompt>perl ./subscribe_email.pl --list mylist --email user@example.com 

C<--list> should hold the listshortname of the list you want to subscribe to. 

C<--email> should hold the email address you want to subscribe. 

C<--verbose> is optional. If set to, C<1>, you will get a small report on the request. 

You can also pass Profile Fields for the subscriber, just use the, C<-fields> paramater: 

 prompt>perl ./subscribe_email.pl --list mylist --email user@example.com ---fields first_name=John --fields last_name=Doe

C<subscribe_email.pl> can also be called from within another script using something like Perl's, C<exec> function. 

=head2 Web Services 

=head2 SOAP

A proof of concept SOAP server and clients (one client written in Perl, one in php) are bundled with Dada Mail. More information: 

L<http://dadamailproject.com/d/README_SOAP.pod.html>

for more inspiration

=head2 REST 

A rest server and example client are bundled with the Dada Mail distro. You can find them at: 


=over

=item * REST server:

I<dada/extras/scripts/subscribe/subscribe_rest_server.cgi> 

=item * REST example client: 

I<dada/extras/scripts/subscribe/subscribe_rest_client.cgi> 

=back

Both are written in perl (although you may write your client in whatever you may like) 

The example client will need the following CPAN modules: 

=over

=item * JSON 

=item * HTTP::Request

=item * HTTP::Request::Common

=item * LWP::UserAgent

=back

The REST server will need the folling CPAN modules: 

=over

=item * JSON

=back

The example client (C<subscribe_rest_client.cgi>) needs a few variables filled out: 

=over

=item * $host

This will be the URL of the C<subscribe_rest_server.cgi>

=item * $email

Should hold the email address you want to subscribe. 

=item * $list

Should hold the listshortname of the list you want to subscribe to. 

=item * $fields 

(hashref) Should hold any Profile Fields you want for the addressee. 

=back

Use the C<subscribe_rest_client.cgi> script as inspiration for integration in your own perl/php program it, by itself, is not a complete script. 

=head1 Other examples

=head2 FormMail Integration

See the sourcecode to FormMail to see how we integrated Dada Mail subscription capabilities in this simple form handler:

http://dadamailproject.com/d/Dada-ized_FormMail_README.pod.html

=head2 TFmail Integration 

See the sourcecode to TFmail to see how we integrated Dada Mail subscription capabilities in this simple form handler:

http://dadamailproject.com/d/Dada-ized_TFMail_README.pod.html

=cut
