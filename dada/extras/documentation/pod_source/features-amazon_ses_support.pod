=pod

=head1 Amazon SES Support

=head2 Introduction

B<From, L<http://aws.amazon.com/ses/>>:

I<Amazon Simple Email Service (Amazon SES) is a highly scalable and cost-effective bulk and transactional email-sending service for businesses and developers. Amazon SES eliminates the complexity and expense of building an in-house email solution or licensing, installing, and operating a third-party email service.>

Dada Mail supports Amazon SES, both by using the Amazon SES API (as well as using the Amazon SES SMTP Interface.)

Amazon SES is one solution to a problem faced by many people on shared hosting account: trying to send too many messages, too quickly. It also can help solve the problem found with people sending large mailings lists, even when they have the resources to send the messages themselves: problems with mail sending aren't a problem with just a few addresses, but with your entire mailing list. 

SES does this by allowing you to send out your messages with what could be a very generous quota, while also having good deliverability: users who abuse the service are disallowed future use. 

B<Amazon SES costs around $0.10 per I<thousand> messages you send.> See:

L<http://aws.amazon.com/ses/pricing/>

for current pricing. Using the service in a testing, non-production mode is I<free>.

We also provide setting up Dada Mail using your own Amazon SES account as part of our installation/upgrade offerings: 

L<http://dadamailproject.com/installation/request.html>

Our services for installing and configuring Amazon SES for your Dada Mail is a one-time fee. 

=head2 Use for Closed-List Opt-In Subscriptions Lists Only

Since Amazon SES is an outside, third party sending service, you'll need to use a mailing list that's B<100% confirmed opt-in>. If you don't, complaints of abuse sent to Amazon will most likely disallow you from continuing to use  their service. 

=head2 Bounce Handler Support

Here's the overview of Bounce support for SES:
L<http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/index.html?SendingEmail.BounceAndComplaintNotifications.html>

When you use Dada Mail with SES, Dada Mail I<will> set the C<Return-Path> header explicitly.

Dada Mail's included Bounce Handler has rules specifically for Amazon SES, and we do suggest using it, if you use Amazon SES.  

=head2 Configuration

During installation of Dada Mail, you'll need to plug in your B<AWS Access Key ID> and B<AWS Secret Access Key>. You may also choose a B<AWS Region/Endpoint>

Getting this all set up is fairly easy in the Amazon AWS control panel, although the steps are a little more numbered than we'd like them to be. Amazon AWS covers a plethora of different services. 

=head2 Obtaining your AWS Access Key ID and AWS Secret Access Key

There's a few ways to create the necessary Users/Groups in the Amazon AWS system, that will then give you the necessary keys you need. Below, we describe a simple way that should give you a secure and specific user, just for SES. 

=head3 Sign up for Amazon Web Services

Begin the signup procedure for Amazon's AWS: 

L<https://portal.aws.amazon.com/gp/aws/developer/registration/index.html>

You'll be asked to create a new Amazon account and give Amazon your payment information.

=head3 Set up an IAM User

Once you're signed up to AWS, log in: 

L<https://portal.aws.amazon.com/gp/aws/manageYourAccount>

Once logged on, you'll want to make a new IAM User here: 

L<https://console.aws.amazon.com/iam/home?#users>

Click the button labeled, B<Create New Users>, 

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/create_new_users.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Create New Users</em> 
</p>

=end html 

Under, B<Enter User Names:> enter a username. For this walkthrough, I'm going to enter B<DadaMail>. 

Make sure, B<Generate an access key for each User> is checked. 

Click the button labeled, B<Create>

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/create_users.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Create!</em> 
</p>

=end html 



Once this new user is created, click the link labeled, B<Show User Security Credentials> 

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/show_user_security_creds.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Show Security Credentials</em> 
</p>

=end html 


and copy the, B<Access Key ID> and, B<Secret Access Key>. Save this information in a safe place: we'll need it later. 

Once you're finished, click B<Close Window> (you may have to do this twice) 

We now have to attach a new B<User Policy>. 

=head3 Create a User Policy for your new User

Check the checkbox next to the user you just created.


=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/1_user_selected.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Select Your New User</em> 
</p>

=end html 


Below the listing for this user, you'll see the user's details. Click on the B<Permissions> tab. 

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/user_permissions.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>The, Permissions Tab</em> 
</p>

=end html 

In that tab, click on the button labeled, B<Attach User Policy>.

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/attach_user_policy.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Attach User Policy</em> 
</p>

=end html 

Under, B<Select Policy Template> choose, B<Amazon SES Full Access>. 

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/select_ses_full_access.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Select Amazon SES Full Access</em> 
</p>

=end html 

The, B<Policy Name> and B<Policy Document> will be shown - we won't need to work with that, so just click the button labeled, B<Apply Policy>

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/apply_policy.jpg" width="800" height="434" class="screenshot" /><br /> 
<em></em> 
</p>

=end html 

We can now use the B<Access Key ID> and B<Secret Access Key> in Dada Mail. 

=head2 Set the Access Key ID and Secret Access Key in Dada Mail. 

The B<Access Key ID> and B<Secret Access Key> are set in Dada Mail's global configuration file, called, C<.dada_config>. You may either add the following lines I<directly> in your C<.dada_config> file: 

	$AMAZON_SES_OPTIONS = { 
		AWSAccessKeyId => 'AKIAI3K72UE32N5BRZSA', 
		AWSSecretKey   => 'GIuwhcVRY2QaCk9BNpRsZOqIH7bF4jr1O5VeSkay', 
	};

I<(using your own B<Access Key ID> and B<Secret Access Key>)> Or, have the included Dada Mail Installer set this up for you: 

=head3 Using the Dada Mail Installer

In the Dada Mail Installer, find the section labeled, B<Advanced Configuration (Optional)>. 

Check the checkbox labeled, B<Configure Amazon SES>. 

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/installer-configure_amazon_ses.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Configure Amazon SES</em> 
</p>

=end html 

Textboxes to plug in the B<Access Key ID> and B<Secret Access Key> we just retrieved will be revealed. Plug in those two keys, and test them by clicking the button labeled, B<Test Your AWS Credentials>. 

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/installer-test_amazon_ses.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Testing the Amazon SES Credentials</em> 
</p>

=end html 

If the credentials work, you'll be told what your current sending quota is.

Complete the installation/configuration by clicking, B<Configure Pro Dada/Dada Mail!>

=head4 More Information on the Dada Mail Installer

The Dada Mail Installer can be used to install and upgrade Dada Mail, as well as change the global configuration of an already installed copy of Dada Mail. 

More information on how to change the global configuration of an already installed copy of Dada Mail, see: 

L<http://dadamailproject.com/d/install_dada_mail.pod.html>

Other advanced configuration options are available to you: 

L<http://dadamailproject.com/d/install_dada_mail-advanced_configuration.pod.html>

=head2 Setting up a Mailing List to use Amazon SES Sending 

Once the AWS B<Access Key ID> and B<Secret Access Key> are configured in Dada Mail, you can then set up a mailing list to use SES for sending. 

Log into your mailing list and go to, B<Mail Sending - Options> 

Under, B<Send Messages Using:>, select, B<Amazon Simple Email Service>

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/mail_sending_options_select_ses.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Selecting, Amazon Simple Email Service</em> 
</p>

=end html 

If you haven't already, you'll need to also B<Verify> each sender that'll be using the service. For Dada Mail, that means verifying the List Owner, and if you're using the Bounce Handler, perhaps the List Administration email address:  

Under B<Amazon SES Tools> fill in your List Owner's email address, and click, B<Verify Address For Sending>. 

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/mail_sending_options_verify_sender.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Verifying a Sender</em> 
</p>

=end html 

That email account will receive an email message from Amazon AWS, with a verification link to click, to finish the verification process. 

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/ses_verification_link.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>SES Sender Verification Email Message</em> 
</p>

=end html 

=head3 Verifying the Bounce Handler

If you're using  a different email address for your mailing list's List Owner, and List Administrator, make sure to verify B<both> addresses. 

This can be a little tricky, if the account for the List Administrator Address is being checked by the Bounce Handler, to process any bounced messages sent back from your mailing list. 

What you'll basically need to do is check the POP3 mailbox of your Bounce Handler, before the Bounce Handler does. Easiest way to do that, is to remove the app cronjob, send the Amazon SES sender verification email (using the same steps above), log into the email account yourself, find the message sent by Amazon SES and click on the verification email found in that message. Once that's done, you can reset the cronjob as it was before. 

=head4 Other Ways to Verify a Sender

The Amazon SES Dashboard itself allows you to Verify a Sender: 

L<https://console.aws.amazon.com/ses/home?#verified-senders-email:>

Click the button labeled, B<Verify a New Email Address> to get started. 

=head2 Set Your Mass Mailing Batch Settings

When using SES for mail sending in Dada Mail, it's important to keep below the sending quota set by Amazon SES. This limit can fluctuate - usually upwards, while you use the service. 

To make things easier, Dada Mail can be set to automatically adjust its Batch Settings to work within your limit, but not above it. 

In Dada Mail's List Control Panel, go to: B<Mail Sending - Mass Mailing Options> and check: 

B<Automatically set batching speeds based on your Amazon SES limits>

=begin html 

<p style="text-align:center">
<img src="http://dadamailproject.com/images/support/ses/auto_adjust_batch_changes.jpg" width="800" height="434" class="screenshot" /><br /> 
<em>Auto-Adjust Batch Settings</em> 
</p>

=end html 

Your batch settings will now grow or shrink, depending on your current Amazon SES sending limits. If you do go over your total 24 hour quota, mass mailings will not be sent out, and batches will be set to wait for 5 minutes, before trying to be sent again. When your 24 hour quota is lifted, sending will once again take place. 

For the most part, Dada Mail will attempt to aggressively keep your batch sending speeds high, until you start coming near your daily mail quota set by SES.

When that happens, batch sending speeds will creep lower, to accomadate your limits. At no point should Dada Mail send either faster than it should, either by going over the limit per second limit, or the 24 hour limit. 

Your SES sending limits themselves should creep up, as you use the service. Keeping the mass sending rates high will show the Amazon AWS system that you're utilizing the system, and they're most likely going to want to raise the limit for you. 

=head2 Request Full Production Access

Once you're done testing Amazon SES, you'll want to request full production access here: 

L<http://aws.amazon.com/ses/fullaccessrequest>

I<Without> full production access, you'll only be able to send messages to addresses that have manually been verified.

=head2 Setting up SPF Records

Setting up SPF Records to work with Amazon SES for your entire domain is covered at: 

L<http://docs.aws.amazon.com/ses/latest/DeveloperGuide/spf.html>

=head2 Setting up DKIM in AWS (Easy DKIM)

Dada Mail does not support sending messages with a DKIM signature, but Amazon SES does - thus, if you send messages with Dada Mail, through Amazon SES and set up Easy DKIM, your messages will be signed. Here's how to do that:

L<http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html>

=head2 Limitations

=head2 Amazon SES API

=head3 Performance 

Sending via Amazon SES is done with a persistent HTTP connection, so performance should be pretty good!. Expect around .3 seconds/message for I<just> passing the email message from Dada Mail to the Amazon SES service. 

=head3 Discussion List Support

Along with the List Owner and List Administration address, be sure to verify the, B<List Email> address with Amazon SES. 

And always keep this option checked: 

B<Send messages, "On Behalf Of" (p.p. mode)>

=head3 Different email headers sent

Amazon has a list of supported email headers: 

L<http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/AppendixHeaders.html>

Dada Mail usually sends messages out with a different set of email headers: 

The, B<Message-ID> header will be sent as the, B<X-Message-ID> header. 

The, B<List> header will be sent as the, B<X-List> header. 

Email headers that are not supported by Amazon SES are automatically not sent out. 

=head3 Sending Quota

Amazon SES starts out with a small sending quota - 10,000 messages you may send in 24 hours, with a maximum 5 messages you can send every second. This quota can grow (and quickly), but make sure not to try to send out quicker than your quota can grow. 

=head4 More Information

L<http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/index.html?ManagingActivity.PlanningAhead.html>

=head2 Dependencies

Amazon SES requires a few more CPAN Perl modules than the base Dada Mail install requires. Make sure you already have, or can install the following CPAN Perl modules: 

=over

=item * Cwd

=item * Digest::SHA

=item * URI::Escape

=item * MIME::Base64	

=item * Crypt::SSLeay	

=item * XML::LibXML

=item * LWP 6

=back

See also the FAQ, B<How do you install, "CPAN Perl Modules"> 

L<http://dadamailproject.com/d/FAQ-installing_CPAN_Perl_modules.pod.html>

=head2 Related Projects

We've seperated out the work we've done with Amazon and using a persistent HTTP connection. That project is located at: 

L<https://github.com/justingit/Net--Amazon--SES>

=cut
